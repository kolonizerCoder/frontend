{"version":3,"sources":["./src/app/Module/custom-fields/custom-fields.module.ts","./src/app/Module/custom-fields/custom-fields-routing.module.ts","./src/app/component/custom-fields/custom-fields.component.ts","./src/app/component/custom-fields/custom-fields.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAE4B;AACmB;AAClB;AAC0B;;AAW/F,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAPpB;YACP,4DAAY;YACZ,uFAAyB;YACzB,yFAAa;YACb,mHAAqB;SACtB;mIAEU,kBAAkB,mBARd,sGAAqB,aAElC,4DAAY;QACZ,uFAAyB;QACzB,yFAAa;QACb,mHAAqB;6FAGZ,kBAAkB;cAT9B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,sGAAqB,CAAC;gBACrC,OAAO,EAAE;oBACP,4DAAY;oBACZ,uFAAyB;oBACzB,yFAAa;oBACb,mHAAqB;iBACtB;aACF;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACuC;;;AAE9F,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sGAAqB,EAAE,CAAC,CAAC;AAMjE,MAAM,yBAAyB;;wGAAzB,yBAAyB;4KAAzB,yBAAyB,kBAH3B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,yBAAyB,uFAF1B,4DAAY;6FAEX,yBAAyB;cAJrC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAO1B;AAGO;;;;;;;;;;;;;ICkDjB,0EAIE;IAAA,0EACE;IAAA,2EACE;IAAA,uEAQA;IAAA,4EAAuB;IAAA,gEAAK;IAAA,4DAAQ;IACtC,4DAAO;IACT,4DAAM;IACN,0EACE;IAAA,0EACE;IAAA,6EAOC;IADC,+UAAoB;IACrB,4DAAS;IACZ,4DAAM;IACR,4DAAM;IACN,0EACE;IAAA,2EACE;IAAA,8EAOC;IADC,0WAAmB;IACpB,4DAAS;IACZ,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IA/BE,0DAAqB;IAArB,iFAAqB;;;IAZjC,4EACE;IAAA,0EACE;IAAA,yIAyCM;IACR,4DAAM;IACR,qEAAe;;;IAzCK,0DAAqB;IAArB,4FAAqB;;;;;;IA9DnD,yEACE;IAAA,yEACE;IAAA,yEACE;IAAA,wEAAa;IAAA,wEAAa;IAAA,4DAAK;IAC/B,4EACE;IAAA,uEACE;IAAA,kEAAiC;IAAC,iEACpC;IAAA,4DAAI;IACN,4DAAS;IACX,4DAAM;IACN,yEACE;IAAA,4EAIE;IAFA,4UAAmC;IAEnC,2EACE;IAAA,2EACE;IAAA,4EACE;IAAA,wEAOA;IAAA,6EAAuB;IAAA,gEAAI;IAAA,4DAAQ;IACrC,4DAAO;IACT,4DAAM;IAEN,2EACE;IAAA,4EACE;IAAA,wEAOA;IAAA,6EAAuB;IAAA,uEAAW;IAAA,4DAAQ;IAC5C,4DAAO;IACT,4DAAM;IAEN,2EACE;IAAA,4EACE;IAAA,kFASC;IADC,oVAA+B;IAChC,4DAAa;IACd,6EAAsB;IAAA,gEAAI;IAAA,4DAAQ;IACpC,4DAAO;IACT,4DAAM;IAEN,4IA6Ce;IAEf,2EACE;IAAA,6EAIc;IACd,6EAAkD;IAAA,sEAAS;IAAA,4DAAQ;IACrE,4DAAM;IAEN,2EACE;IAAA,8EAIE;IAAA,oEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;IACR,4DAAO;IACT,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAzHK,0DAAkC;IAAlC,6IAAkC;IAOrC,0DAAgC;IAAhC,gGAAgC;IAsCxB,2DAA8B;IAA9B,+HAA8B;IAJ9B,mFAA0B;IAYM,0DAAyB;IAAzB,4FAAyB;IA2D3D,0DAAuC;IAAvC,uGAAuC;;;IAWnD,0EACE;IAAA,yEAA2B;IAC7B,4DAAM;;ADjHD,MAAM,qBAAqB;IAWhC,YACU,EAAe,EACf,qBAA0C,EAC1C,MAAc;QAFd,OAAE,GAAF,EAAE,CAAa;QACf,0BAAqB,GAArB,qBAAqB,CAAqB;QAC1C,WAAM,GAAN,MAAM,CAAQ;QAbxB,YAAO,GAAY,KAAK,CAAC;QAGzB,SAAI,GAAU;YACZ,EAAE,IAAI,EAAE,OAAO,EAAE;YACjB,EAAE,IAAI,EAAE,UAAU,EAAE;YACpB,EAAE,IAAI,EAAE,OAAO,EAAE;YACjB,EAAE,IAAI,EAAE,MAAM,EAAE;YAChB,EAAE,IAAI,EAAE,WAAW,EAAE;SACtB,CAAC;IAKC,CAAC;IAEJ,UAAU;QACR,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,MAAM,EAAE,IAAI,wDAAS,CAAC,EAAE,CAAC;YACzB,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACvC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAc,CAAC;IAC5D,CAAC;IAED,QAAQ;QACN,MAAM,OAAO,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAED,MAAM,CAAC,CAAC;QACN,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,KAAK,CAAC,KAAK,KAAK,OAAO,IAAI,KAAK,CAAC,KAAK,KAAK,WAAW,EAAE;YAC1D,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;IACH,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,SAAS,CAC7D,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CACrC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,kDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,KAAK,CAAC,YAAY;SACzB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACX,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;;0FA/EU,qBAAqB;qGAArB,qBAAqB;QCjBlC,mHA8HM;QACN,6MAIc;;;QAnIK,8EAAgB;;6FDiBtB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C","file":"custom-fields-custom-fields-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CustomFieldsRoutingModule } from './custom-fields-routing.module';\nimport { CustomFieldsComponent } from '../../component/custom-fields/custom-fields.component';\nimport { PrimengModule } from 'src/app/SharedModule/primeng/primeng.module';\nimport { SharedUtilitiesModule } from 'src/app/SharedModule/shared-utilities/shared-utilities.module';\n\n@NgModule({\n  declarations: [CustomFieldsComponent],\n  imports: [\n    CommonModule,\n    CustomFieldsRoutingModule,\n    PrimengModule,\n    SharedUtilitiesModule,\n  ],\n})\nexport class CustomFieldsModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomFieldsComponent } from '../../component/custom-fields/custom-fields.component';\n\nconst routes: Routes = [{ path: '', component: CustomFieldsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CustomFieldsRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CustomFieldsService } from 'src/app/service/custom-fields.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-custom-fields',\n  templateUrl: './custom-fields.component.html',\n  styleUrls: ['./custom-fields.component.scss'],\n})\nexport class CustomFieldsComponent implements OnInit {\n  spinner: boolean = false;\n  custom_fields_form: FormGroup;\n  option: string;\n  type: any[] = [\n    { name: 'input' },\n    { name: 'checkbox' },\n    { name: 'radio' },\n    { name: 'date' },\n    { name: 'selection' },\n  ];\n  constructor(\n    private fb: FormBuilder,\n    private custom_fields_service: CustomFieldsService,\n    private router: Router\n  ) {}\n\n  validation() {\n    this.custom_fields_form = this.fb.group({\n      name: ['', Validators.required],\n      required: [true, Validators.required],\n      type: ['', Validators.required],\n      option: new FormArray([]),\n      placeholder: ['', Validators.required],\n    });\n  }\n\n  get option_() {\n    return this.custom_fields_form.get('option') as FormArray;\n  }\n\n  addSkill() {\n    const control = new FormControl('', Validators.required);\n    this.option_.push(control);\n  }\n\n  remove(i) {\n    this.option_.removeAt(i);\n  }\n\n  get_change(event) {\n    this.option_.clear();\n    this.option = '';\n    if (event.value === 'radio' || event.value === 'selection') {\n      this.option = 'select';\n      this.addSkill();\n    }\n  }\n\n  create_custom_fields() {\n    this.spinner = true;\n    const data = this.custom_fields_form.getRawValue();\n    data['feature_in'] = ['ticket'];\n    data['disabled'] = false;\n    this.custom_fields_service.create_custom_fields(data).subscribe(\n      (res) => {\n        console.log(res);\n        this.custom_fields_form.reset();\n        this.option_.clear();\n        this.option = '';\n        this.spinner = false;\n      },\n      (error) => this.error_handler(error)\n    );\n  }\n\n  error_handler(error) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: error.errorMessage,\n    }).then(() => {\n      this.spinner = false;\n      this.router.navigate(['/main']);\n    });\n  }\n\n  ngOnInit(): void {\n    this.validation();\n  }\n}\n","<div class=\"card\" *ngIf=\"!spinner; else showspinner\">\n  <div class=\"card-body\">\n    <div class=\"header\">\n      <h3 class=\"\">Custom Feilds</h3>\n      <button class=\"btn btn-primary\">\n        <a [routerLink]=\"['../view-subject']\">\n          <i class=\"fas fa-arrow-left\"></i> Back\n        </a>\n      </button>\n    </div>\n    <div class=\"container-fluid mt-3\">\n      <form\n        [formGroup]=\"custom_fields_form\"\n        (ngSubmit)=\"create_custom_fields()\"\n      >\n        <div class=\"row\">\n          <div class=\"col-12 col-md-4 mt-5\">\n            <span class=\"p-float-label w-100\">\n              <input\n                type=\"text\"\n                id=\"inputtext\"\n                class=\"form-control\"\n                formControlName=\"name\"\n                pInputText\n              />\n              <label for=\"inputtext\">Name</label>\n            </span>\n          </div>\n\n          <div class=\"col-12 col-md-4 mt-5\">\n            <span class=\"p-float-label w-100\">\n              <input\n                type=\"text\"\n                id=\"inputtext\"\n                class=\"form-control\"\n                formControlName=\"placeholder\"\n                pInputText\n              />\n              <label for=\"inputtext\">PlaceHolder</label>\n            </span>\n          </div>\n\n          <div class=\"col-12 col-md-4 mt-5\">\n            <span class=\"p-float-label w-100\">\n              <p-dropdown\n                inputId=\"dropdown\"\n                [autoDisplayFirst]=\"false\"\n                [options]=\"type\"\n                optionLabel=\"name\"\n                optionValue=\"name\"\n                [style]=\"{ minWidth: '100%' }\"\n                formControlName=\"type\"\n                (onChange)=\"get_change($event)\"\n              ></p-dropdown>\n              <label for=\"dropdown\">Type</label>\n            </span>\n          </div>\n\n          <ng-container formArrayName=\"option\" *ngIf=\"option === 'select'\">\n            <div class=\"col-12 col-md-8 mt-5\">\n              <div\n                class=\"row align-items-center\"\n                *ngFor=\"let _ of option_.controls; index as i\"\n              >\n                <div class=\"col-12 col-md-10\" style=\"margin-top: 2rem\">\n                  <span class=\"p-float-label w-100\">\n                    <input\n                      type=\"text\"\n                      id=\"inputtext\"\n                      class=\"form-control\"\n                      [formControlName]=\"i\"\n                      pInputText\n                    />\n\n                    <label for=\"inputtext\">Value</label>\n                  </span>\n                </div>\n                <div class=\"col-12 col-md-1\" style=\"margin-top: 2rem\">\n                  <div class=\"plus\">\n                    <button\n                      pButton\n                      pRipple\n                      type=\"button\"\n                      icon=\"pi pi-plus\"\n                      class=\"p-button-rounded\"\n                      (click)=\"addSkill()\"\n                    ></button>\n                  </div>\n                </div>\n                <div class=\"col-12 col-md-1\" style=\"margin-top: 2rem\">\n                  <div class=\"plus\">\n                    <button\n                      pButton\n                      pRipple\n                      type=\"button\"\n                      icon=\"pi pi-minus\"\n                      class=\"p-button-rounded p-button-danger\"\n                      (click)=\"remove(i)\"\n                    ></button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n\n          <div class=\"col-12 col-md-2 mt-5\">\n            <p-checkbox\n              formControlName=\"required\"\n              binary=\"true\"\n              inputId=\"binary\"\n            ></p-checkbox>\n            <label for=\"binary\" style=\"padding-left: 0.5rem\"> Required </label>\n          </div>\n\n          <div class=\"col-12 col-md-2 mt-5\">\n            <button\n              class=\"btn btn-primary\"\n              [disabled]=\"custom_fields_form.invalid\"\n            >\n              Create\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n<ng-template #showspinner>\n  <div class=\"spinner\">\n    <app-spinner></app-spinner>\n  </div>\n</ng-template>\n"],"sourceRoot":"webpack:///"}