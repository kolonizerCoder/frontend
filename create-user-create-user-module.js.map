{"version":3,"sources":["./src/app/component/create-user/create-user.component.ts","./src/app/component/create-user/create-user.component.html","./src/app/Module/create-user/create-user-routing.module.ts","./src/app/service/category.service.ts","./src/app/Module/create-user/create-user.module.ts"],"names":[],"mappings":"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","file":"create-user-create-user-module.js","sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MessageService, TreeNode } from 'primeng/api';\nimport { PermissionService } from 'src/app/service/permission.service';\nimport { UserService } from 'src/app/service/user.service';\nimport { FormativeData } from '../../utilities/formative_data';\nimport Swal from 'sweetalert2';\nimport { eye_button } from 'src/app/utilities/password_eye';\nimport { ACTIVE_USER } from 'src/app/utilities/Decode_jwt';\nimport { Notification } from 'src/app/utilities/ACCESS_DENIED';\nimport { day } from 'src/app/utilities/days';\nimport { TicketService } from 'src/app/service/ticket.service';\nimport { CategoryService } from 'src/app/service/category.service';\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.scss'],\n  providers: [MessageService],\n})\nexport class CreateUserComponent implements OnInit {\n  permission: boolean = false;\n  user_type: any[];\n  selected_permission: TreeNode[] = [];\n  permissions: TreeNode[];\n  spinner: boolean = false;\n  ticket: boolean = false;\n  cols: { field: string; header: string }[];\n  personal_info: FormGroup;\n  days: string[] = day;\n\n  ticket_permission: TreeNode[] = [];\n  selected_category: any[] = [];\n  selected_ticket_permission: TreeNode[] = [];\n  category: any[] = [];\n\n  @ViewChild('password') password: ElementRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private permission_service: PermissionService,\n    private user_service: UserService,\n    private messageService: MessageService,\n    private activated_route: ActivatedRoute,\n    private router: Router,\n    private ticket_service: TicketService,\n    private category_service: CategoryService\n  ) {}\n\n  check_permission() {\n    this.spinner = !this.spinner;\n    this.activated_route.data.subscribe(async (res) => {\n      const user: any = ACTIVE_USER();\n      if (!user.permissions.includes(res.role)) {\n        this.router.navigate(['/main']);\n        Notification.ACCESS_DENIED();\n        return '';\n      }\n      this.spinner = false;\n    });\n  }\n\n  validation() {\n    this.personal_info = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      user_type: ['', Validators.required],\n      password: ['', Validators.required],\n      office_start_time: ['', Validators.required],\n      office_end_time: ['', Validators.required],\n      active_days: ['', Validators.required],\n    });\n  }\n\n  initial_data() {\n    // for permission table\n    this.cols = [{ field: 'name', header: 'Please Select Permission' }];\n    this.user_type = ['Admin', 'Trainer'];\n  }\n\n  get_permissions() {\n    this.permission_service.get_all_permission().subscribe(\n      (res: any) => {\n        this.permissions = FormativeData.format(res.permission);\n      },\n      (error) => {\n        this.error_handler(error);\n      }\n    );\n  }\n\n  get_ticket_permission() {\n    this.spinner = true;\n    this.ticket_service.get_ticket_permission().subscribe(\n      (res: any) => {\n        this.ticket_permission = FormativeData.format(res.permission);\n        this.spinner = false;\n      },\n      (error) => this.error_handler(error)\n    );\n  }\n\n  get_category() {\n    this.spinner = true;\n    this.category_service.get_category_type('Ticket').subscribe(\n      (res: any) => {\n        this.category = res.data;\n        this.spinner = false;\n      },\n      (error) => {\n        this.error_handler(error);\n      }\n    );\n  }\n\n  error_handler(error) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: error.errorMessage,\n    }).then(() => {\n      this.spinner = false;\n      this.router.navigate(['/main']);\n    });\n  }\n\n  show_password() {\n    eye_button(this.password);\n  }\n\n  async get_personal_info() {\n    this.spinner = !this.spinner;\n    const user_info = this.personal_info.getRawValue();\n    user_info['permissions'] = FormativeData.removeParent(\n      this.selected_permission\n    );\n    user_info['disabled'] = false;\n    user_info['batch_ids'] = [];\n    user_info['ticket_permission'] = FormativeData.removeParent(\n      this.selected_ticket_permission\n    );\n    user_info['ticket_handle_category'] = this.selected_category;\n    this.user_service.create_user(user_info).subscribe(\n      (res) => {\n        this.messageService.add({\n          severity: 'success',\n          summary: 'User Created',\n        });\n        this.personal_info.reset();\n        this.permission = false;\n        this.ticket = false;\n        this.selected_permission = [];\n        this.spinner = !this.spinner;\n      },\n      (error) => {\n        this.error_handler(error);\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.check_permission();\n    this.validation();\n    this.initial_data();\n    this.get_permissions();\n    this.get_ticket_permission();\n    this.get_category();\n  }\n}\n","<ng-container *ngIf=\"!spinner; else showspinner\">\n  <!-- General Information Form -->\n\n  <div class=\"card\" *ngIf=\"!permission && !ticket\">\n    <div class=\"card-body\">\n      <div class=\"header\">\n        <h3 class=\"\">Create Admin</h3>\n        <button class=\"btn btn-primary\">\n          <a [routerLink]=\"['../user-details/admin']\">\n            <i class=\"fas fa-arrow-left\"></i> Back\n          </a>\n        </button>\n      </div>\n\n      <div class=\"personal-details container-fluid py-3\">\n        <form [formGroup]=\"personal_info\">\n          <div class=\"row\">\n            <div class=\"col-12 col-md-4\">\n              <span class=\"p-float-label w-100\">\n                <input\n                  type=\"text\"\n                  id=\"inputtext\"\n                  formControlName=\"name\"\n                  pInputText\n                  class=\"form-control\"\n                  autocomplete=\"off\"\n                />\n                <label for=\"inputtext\">Enter your Name</label>\n              </span>\n            </div>\n            <div class=\"col-12 col-md-4\">\n              <span class=\"p-float-label w-100\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"inputtext-left\"\n                  pInputText\n                  formControlName=\"email\"\n                  autocomplete=\"off\"\n                />\n                <label for=\"inputtext-left\">Enter your Email</label>\n              </span>\n            </div>\n\n            <div class=\"col-12 col-md-4\">\n              <span class=\"p-float-label w-100\">\n                <p-dropdown\n                  inputId=\"dropdown\"\n                  [autoDisplayFirst]=\"false\"\n                  [options]=\"user_type\"\n                  [autoWidth]=\"false\"\n                  [style]=\"{ minWidth: '100%' }\"\n                  formControlName=\"user_type\"\n                  autocomplete=\"off\"\n                ></p-dropdown>\n                <label for=\"dropdown\">Enter User Type</label>\n              </span>\n            </div>\n\n            <div class=\"col-12 col-md-4 mt-5 position-relative\">\n              <span class=\"p-float-label w-100 position-relative\">\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  id=\"inputtext-left\"\n                  pInputText\n                  formControlName=\"password\"\n                  #password\n                  autocomplete=\"off\"\n                />\n                <label for=\"inputtext-left\">Enter your Password</label>\n              </span>\n\n              <span class=\"eye\" (click)=\"show_password(password)\"\n                ><i\n                  class=\"pi pi-eye-slash\"\n                  *ngIf=\"\n                    password.getAttribute('type') === 'password';\n                    else close\n                  \"\n                >\n                </i>\n\n                <ng-template #close>\n                  <i class=\"pi pi-eye\"> </i>\n                </ng-template>\n              </span>\n            </div>\n\n            <div class=\"col-12 col-md-4 mt-5\">\n              <span class=\"p-float-label w-100\">\n                <p-multiSelect\n                  inputId=\"multiselect\"\n                  [options]=\"days\"\n                  [filter]=\"true\"\n                  [style]=\"{ minWidth: '100%' }\"\n                  formControlName=\"active_days\"\n                  display=\"chip\"\n                ></p-multiSelect>\n                <label for=\"multiselect\">Active Days</label>\n              </span>\n            </div>\n\n            <div class=\"col-12 col-md-4 mt-5\">\n              <span class=\"p-float-label w-100\">\n                <p-calendar\n                  [timeOnly]=\"true\"\n                  [style]=\"{ minWidth: '100%' }\"\n                  inputId=\"timeonly\"\n                  hourFormat=\"12\"\n                  formControlName=\"office_start_time\"\n                ></p-calendar>\n                <label for=\"calenar\">Office Start Time</label>\n              </span>\n            </div>\n\n            <div class=\"col-12 col-md-4 mt-5\">\n              <span class=\"p-float-label w-100\">\n                <p-calendar\n                  [timeOnly]=\"true\"\n                  [style]=\"{ minWidth: '100%' }\"\n                  inputId=\"timeonly\"\n                  hourFormat=\"12\"\n                  formControlName=\"office_end_time\"\n                ></p-calendar>\n                <label for=\"calenar\">Office End Time</label>\n              </span>\n            </div>\n\n            <div class=\"col-12 col-md-4 mt-5\">\n              <button\n                type=\"button\"\n                [disabled]=\"personal_info.invalid\"\n                (click)=\"permission = !permission\"\n                class=\"btn btn-primary\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n  <!-- Permission Form -->\n  <div class=\"permission\" *ngIf=\"permission\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <!-- Permission Tree -->\n        <p-treeTable\n          [value]=\"permissions\"\n          [columns]=\"cols\"\n          selectionMode=\"checkbox\"\n          [(selection)]=\"selected_permission\"\n        >\n          <ng-template pTemplate=\"header\" let-columns>\n            <tr>\n              <th *ngFor=\"let col of columns\">\n                {{ col.header }}\n              </th>\n            </tr>\n          </ng-template>\n          <ng-template\n            pTemplate=\"body\"\n            let-rowNode\n            let-rowData=\"rowData\"\n            let-columns=\"columns\"\n          >\n            <tr>\n              <td *ngFor=\"let col of columns; let i = index\">\n                <p-treeTableToggler\n                  [rowNode]=\"rowNode\"\n                  *ngIf=\"i == 0\"\n                ></p-treeTableToggler>\n                <p-treeTableCheckbox\n                  [value]=\"rowNode\"\n                  *ngIf=\"i == 0\"\n                ></p-treeTableCheckbox>\n                {{ rowData[col.field] }}\n              </td>\n            </tr>\n          </ng-template>\n        </p-treeTable>\n\n        <!-- Button Controls -->\n        <div class=\"d-flex mt-3 w-100\">\n          <div>\n            <button\n              class=\"btn btn-primary ml-3\"\n              (click)=\"permission = !permission\"\n            >\n              Back\n            </button>\n          </div>\n\n          <div class=\"button-second\">\n            <button\n              class=\"btn btn-primary\"\n              (click)=\"ticket = !ticket; permission = !permission\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Ticket setting Form -->\n  <div class=\"ticket\" *ngIf=\"ticket\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h3 class=\"h3\">Ticket Setting</h3>\n\n        <div class=\"row\">\n          <div class=\"col-12 my-5\">\n            <span class=\"p-float-label w-100\">\n              <p-multiSelect\n                inputId=\"multiselect\"\n                [options]=\"category\"\n                [filter]=\"true\"\n                [style]=\"{ minWidth: '100%' }\"\n                optionLabel=\"category_name\"\n                optionValue=\"_id\"\n                display=\"chip\"\n                [(ngModel)]=\"selected_category\"\n              ></p-multiSelect>\n              <label for=\"multiselect\">Active Days</label>\n            </span>\n          </div>\n\n          <!-- Ticket Permission Tree -->\n\n          <p-treeTable\n            [value]=\"ticket_permission\"\n            [columns]=\"cols\"\n            selectionMode=\"checkbox\"\n            [(selection)]=\"selected_ticket_permission\"\n          >\n            <ng-template pTemplate=\"header\" let-columns>\n              <tr>\n                <th *ngFor=\"let col of columns\">\n                  {{ col.header }}\n                </th>\n              </tr>\n            </ng-template>\n            <ng-template\n              pTemplate=\"body\"\n              let-rowNode\n              let-rowData=\"rowData\"\n              let-columns=\"columns\"\n            >\n              <tr>\n                <td *ngFor=\"let col of columns; let i = index\">\n                  <p-treeTableToggler\n                    [rowNode]=\"rowNode\"\n                    *ngIf=\"i == 0\"\n                  ></p-treeTableToggler>\n                  <p-treeTableCheckbox\n                    [value]=\"rowNode\"\n                    *ngIf=\"i == 0\"\n                  ></p-treeTableCheckbox>\n                  {{ rowData[col.field] }}\n                </td>\n              </tr>\n            </ng-template>\n          </p-treeTable>\n        </div>\n\n        <!-- Button Controls -->\n        <div class=\"d-flex mt-3 w-100\">\n          <div>\n            <button\n              class=\"btn btn-primary ml-3\"\n              (click)=\"ticket = !ticket; permission = !permission\"\n            >\n              Back\n            </button>\n          </div>\n\n          <div class=\"button-second\">\n            <button\n              class=\"btn btn-primary\"\n              [disabled]=\"\n                selected_ticket_permission.length > 0 &&\n                selected_category.length == 0\n              \"\n              (click)=\"get_personal_info()\"\n            >\n              Create\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<!-- Success Message -->\n<p-toast position=\"bottom-center\"></p-toast>\n<ng-template #showspinner>\n  <div class=\"spinner\">\n    <app-spinner></app-spinner>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateUserComponent } from 'src/app/component/create-user/create-user.component';\nimport { RoleGaurdGuard } from 'src/app/gaurd/role-gaurd.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreateUserComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CreateUserRoutingModule {}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  constructor(private http: HttpClient) {}\n\n  create_category(data) {\n    return this.http.post(\n      `${environment.BASE_SERVER_URL}/category/create-category`,\n      { data }\n    );\n  }\n\n  get_all_category(type) {\n    return this.http.get(\n      `${environment.BASE_SERVER_URL}/category/get-category/${type}`\n    );\n  }\n\n  change_category_status(data) {\n    return this.http.post(\n      `${environment.BASE_SERVER_URL}/category/update-category-status`,\n      { data }\n    );\n  }\n\n  get_category_by_id(id) {\n    return this.http.get(\n      `${environment.BASE_SERVER_URL}/category/get-category-by-id/${id}`\n    );\n  }\n\n  update_category(data) {\n    return this.http.post(\n      `${environment.BASE_SERVER_URL}/category/update-category`,\n      { data }\n    );\n  }\n\n  get_category_type(type) {\n    return this.http.get(\n      `${environment.BASE_SERVER_URL}/category/get-category-type/${type}`\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CreateUserRoutingModule } from './create-user-routing.module';\nimport { CreateUserComponent } from 'src/app/component/create-user/create-user.component';\nimport { PrimengModule } from 'src/app/SharedModule/primeng/primeng.module';\nimport { SharedUtilitiesModule } from 'src/app/SharedModule/shared-utilities/shared-utilities.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [CreateUserComponent],\n  imports: [\n    CommonModule,\n    CreateUserRoutingModule,\n    PrimengModule,\n    SharedUtilitiesModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class CreateUserModule {}\n"],"sourceRoot":"webpack:///"}