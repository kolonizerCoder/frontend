{"version":3,"sources":["./src/app/component/update-student-profile/update-student-profile.component.ts","./src/app/component/update-student-profile/update-student-profile.component.html","./src/app/Module/update-student-profile/update-student-profile.module.ts","./src/app/Module/update-student-profile/update-student-profile-routing.module.ts"],"names":[],"mappings":"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","file":"update-student-profile-update-student-profile-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TreeNode } from 'primeng/api';\nimport { StudentsService } from 'src/app/service/students.service';\nimport { SubjectService } from 'src/app/service/subject.service';\nimport { ACTIVE_USER } from 'src/app/utilities/Decode_jwt';\nimport { FormativeData } from 'src/app/utilities/formative_data';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-student-profile',\n  templateUrl: './update-student-profile.component.html',\n  styleUrls: ['./update-student-profile.component.scss'],\n})\nexport class UpdateStudentProfileComponent implements OnInit {\n  spinner: boolean = false;\n  student_id: string;\n  student: any;\n  update_student_profile: FormGroup;\n  admin: any;\n  data: any;\n  selectedSubject: TreeNode[] = [];\n  cols: { field: string; header: string }[];\n\n  constructor(\n    private activated_route: ActivatedRoute,\n    private student_service: StudentsService,\n    private fb: FormBuilder,\n    private subject_service: SubjectService\n  ) {\n    this.cols = [{ field: 'name', header: 'Batch Name' }];\n  }\n\n  get_student_details() {\n    this.spinner = true;\n    this.student_service\n      .get_student_details_upadte(this.student_id)\n      .subscribe((res: any) => {\n        this.student = res.data;\n\n        this.student.batch_ids\n          ? this.get_all_subject()\n          : this.fill_pervious_details;\n      });\n  }\n\n  get_all_subject() {\n    this.subject_service.get_subject(false).subscribe((res: any) => {\n      const subject = res.data;\n      this.data = FormativeData.format_batch_data(\n        this.student.batch_ids,\n        subject\n      );\n\n      this.student.batch_ids.map((batch) => {\n        batch.subject_ids.map((subject) => {\n          this.selectedSubject.push({\n            data: {\n              name: subject.subject_name,\n              id: subject._id,\n              type: 'Subject',\n              batch: batch.batch_ids.batch_name,\n              batch_id: batch.batch_ids._id,\n            },\n          });\n        });\n      });\n\n      this.fill_pervious_details();\n    });\n  }\n\n  fill_pervious_details() {\n    this.update_student_profile.controls.name.patchValue(this.student.name);\n    this.update_student_profile.controls.email.patchValue(this.student.email);\n    this.update_student_profile.controls.date_of_joining.patchValue(\n      this.student.date_of_joining\n        ? new Date(this.student.date_of_joining)\n        : null\n    );\n\n    this.spinner = false;\n  }\n\n  validation() {\n    this.update_student_profile = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      date_of_joining: ['', Validators.required],\n    });\n  }\n\n  update_student() {\n    this.spinner = true;\n    const data = this.update_student_profile.getRawValue();\n    const batch_ids = FormativeData.groupBy_batchID(this.selectedSubject);\n\n    data['student_id'] = this.student_id;\n    data['batch_ids'] = batch_ids;\n\n    this.student_service.update_student_profile(data).subscribe((res) => {\n      Swal.fire({\n        icon: 'success',\n        title: 'Yeah...',\n        text: 'Student Updated',\n      }).then(() => {\n        this.get_student_details();\n      });\n    });\n  }\n\n  ngOnInit(): void {\n    this.student_id = this.activated_route.snapshot.params.student_id;\n    this.admin = ACTIVE_USER();\n    this.get_student_details();\n    this.validation();\n  }\n}\n","<div *ngIf=\"!spinner; else showspinner\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"header\">\n        <h3 class=\"\">{{ student.name }}</h3>\n\n        <div class=\"d-flex align-items-center\">\n          <button class=\"btn btn-primary\">\n            <a [routerLink]=\"['../../students-details', 'student']\">\n              <i class=\"fas fa-arrow-left\"></i> Back\n            </a>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"container-fluid\">\n        <form\n          action=\"\"\n          [formGroup]=\"update_student_profile\"\n          (ngSubmit)=\"update_student()\"\n          class=\"w-100\"\n        >\n          <div class=\"row\">\n            <div class=\"col-12 col-md-4 mt-5\">\n              <span class=\"p-float-label w-100\">\n                <input\n                  type=\"text\"\n                  id=\"inputtext\"\n                  class=\"form-control\"\n                  pInputText\n                  formControlName=\"name\"\n                />\n                <label for=\"inputtext\">Name</label>\n              </span>\n            </div>\n\n            <div\n              class=\"col-12 col-md-4 mt-5\"\n              *ngIf=\"admin.permissions.includes('USE01')\"\n            >\n              <span class=\"p-float-label w-100\">\n                <input\n                  type=\"text\"\n                  id=\"inputtext\"\n                  class=\"form-control\"\n                  pInputText\n                  formControlName=\"email\"\n                />\n                <label for=\"inputtext\">Email</label>\n              </span>\n            </div>\n\n            <div class=\"col-12 col-md-4 mt-5\">\n              <span class=\"p-float-label w-100\">\n                <p-calendar\n                  inputId=\"calendar\"\n                  [style]=\"{ minWidth: '100%' }\"\n                  dateFormat=\"dd.mm.yy\"\n                  formControlName=\"date_of_joining\"\n                ></p-calendar>\n                <label for=\"calenar\">Date of joining</label>\n              </span>\n            </div>\n\n            <div\n              class=\"col-12 col-md-10 mt-5\"\n              *ngIf=\"admin.permissions.includes('USB01')\"\n            >\n              <p-treeTable\n                [value]=\"data\"\n                [columns]=\"cols\"\n                selectionMode=\"checkbox\"\n                [(selection)]=\"selectedSubject\"\n              >\n                <ng-template pTemplate=\"header\" let-columns>\n                  <tr>\n                    <th *ngFor=\"let col of columns\">\n                      {{ col.header }}\n                    </th>\n                  </tr>\n                </ng-template>\n                <ng-template\n                  pTemplate=\"body\"\n                  let-rowNode\n                  let-rowData=\"rowData\"\n                  let-columns=\"columns\"\n                >\n                  <tr>\n                    <td *ngFor=\"let col of columns; let i = index\">\n                      <p-treeTableToggler\n                        [rowNode]=\"rowNode\"\n                        *ngIf=\"i == 0\"\n                      ></p-treeTableToggler>\n                      <p-treeTableCheckbox\n                        [value]=\"rowNode\"\n                        *ngIf=\"i == 0\"\n                      ></p-treeTableCheckbox>\n                      {{ rowData[col.field] }}\n                    </td>\n                  </tr>\n                </ng-template>\n              </p-treeTable>\n            </div>\n\n            <div class=\"col-12 col-md-2 mt-5\">\n              <button\n                class=\"btn btn-primary\"\n                [disabled]=\"update_student_profile.invalid\"\n              >\n                Update\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #showspinner>\n  <div class=\"spinner\">\n    <app-spinner></app-spinner>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UpdateStudentProfileRoutingModule } from './update-student-profile-routing.module';\nimport { UpdateStudentProfileComponent } from '../../component/update-student-profile/update-student-profile.component';\nimport { PrimengModule } from 'src/app/SharedModule/primeng/primeng.module';\nimport { SharedUtilitiesModule } from 'src/app/SharedModule/shared-utilities/shared-utilities.module';\n\n@NgModule({\n  declarations: [UpdateStudentProfileComponent],\n  imports: [\n    CommonModule,\n    UpdateStudentProfileRoutingModule,\n    PrimengModule,\n    SharedUtilitiesModule,\n  ],\n})\nexport class UpdateStudentProfileModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UpdateStudentProfileComponent } from '../../component/update-student-profile/update-student-profile.component';\n\nconst routes: Routes = [{ path: '', component: UpdateStudentProfileComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UpdateStudentProfileRoutingModule {}\n"],"sourceRoot":"webpack:///"}