{"version":3,"sources":["./src/app/Module/view-custom-fields/view-custom-fields.module.ts","./src/app/component/view-custom-fields/view-custom-fields.component.ts","./src/app/component/view-custom-fields/view-custom-fields.component.html","./src/app/Module/view-custom-fields/view-custom-fields-routing.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEqC;AACwB;AACN;AAC1B;;AAWrE,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAPxB;YACP,4DAAY;YACZ,gGAA6B;YAC7B,mHAAqB;YACrB,yFAAa;SACd;mIAEU,sBAAsB,mBARlB,oHAAyB,aAEtC,4DAAY;QACZ,gGAA6B;QAC7B,mHAAqB;QACrB,yFAAa;6FAGJ,sBAAsB;cATlC,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,oHAAyB,CAAC;gBACzC,OAAO,EAAE;oBACP,4DAAY;oBACZ,gGAA6B;oBAC7B,mHAAqB;oBACrB,yFAAa;iBACd;aACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBiD;AAGS;AAC5B;;;;;;;;;;;;ICErB,wEACE;IAAA,iFACF;IAAA,qEAAe;;;IACI,mFAAuB;;;IAMtC,wEACE;IAAA,4EACF;IAAA,qEAAe;;;IACO,0EAAc;;;;IA0BtC,0EACE;IAAA,2EACE;IAAA,mEAA4B;IAC5B,4EASF;IANI,4XACuB,sCAChC,UAAU,CACnB,IADmB;IALH,4DASF;IAAA,4DAAO;IACT,4DAAM;;;IAGN,qEACE;IAAA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,sEAAW;IAAA,4DAAK;IACpB,qEAAI;IAAA,iEAAM;IAAA,4DAAK;IACf,qEAAI;IAAA,oEAAS;IAAA,4DAAK;IAClB,qEAAI;IAAA,kEAAM;IAAA,4DAAK;IACjB,4DAAK;;;IAUC,qEAAuC;IAAA,uDAAU;IAAA,4DAAK;;;IAAf,0DAAU;IAAV,yEAAU;;;;IAKnD,wEACE;IAAA,6EAOC;IADC,8UAAS,mBAAmB,IAAC;IAC9B,4DAAS;IAEV,iFAKC;IADC,qdAAsC;IACvC,4DAAS;IACZ,qEAAe;;;IAJX,0DAAc;IAAd,uEAAc;;;;IAOhB,6EAOC;IADC,6cAA+B;IAChC,4DAAS;;;IAtChB,qEACE;IAAA,qEACE;IAAA,uDACF;IAAA,4DAAK;IACL,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEACE;IAAA,yEACE;IAAA,6IAAsD;IACxD,4DAAK;IACP,4DAAK;IACL,qEAAI;IAAA,uDAAuC;;IAAA,4DAAK;IAChD,0EACE;IAAA,kKAgBe;IAEf,6OASc;IAChB,4DAAK;IACP,4DAAK;;;;;IAvCD,0DACF;IADE,2FACF;IACI,0DAAwB;IAAxB,uFAAwB;IAGH,0DAAgB;IAAhB,sFAAgB;IAGrC,0DAAuC;IAAvC,iKAAuC;IAE1B,0DAAwB;IAAxB,0FAAwB;;;IAgC3C,qEACE;IAAA,yEAAgB;IAAA,yEAAc;IAAA,4DAAK;IACrC,4DAAK;;;;;;;IAnHjB,0EACE;IACA,yEACE;IAAA,yEACE;IAAA,yEACE;IAAA,wEACE;IAAA,iJAEe;IACf,2NAAwD;IAC1D,4DAAK;IAEL,yEACE;IAAA,4EACE;IAAA,wEACE;IAD2B,kUAAuB;IAClD,mJAEe;IACf,8NAAkD;IACpD,4DAAI;IACN,4DAAS;IAET,8EACE;IAAA,yEACE;IAAA,kFAAqB;IAAA,oEAA2B;IAClD,4DAAI;IACN,4DAAS;IACX,4DAAM;IACR,4DAAM;IAEN,uEACE;IAAA,mFAYE;IAAA,kJAec;IACd,mJAQc;IACd,mJA2Cc;IACd,kJAIc;IAChB,4DAAU;IACZ,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAU;;;;;IAnHe,0DAAwB;IAAxB,yFAAwB;IASpB,0DAAwB;IAAxB,yFAAwB;IAQtC,0DAAmC;IAAnC,8IAAmC;IAUxC,0DAAuB;IAAvB,uFAAuB;;;IA2F/B,0EACE;IAAA,yEAA2B;IAC7B,4DAAM;;ADnHD,MAAM,yBAAyB;IAOpC,YACU,qBAA0C,EAC1C,MAAc;QADd,0BAAqB,GAArB,qBAAqB,CAAqB;QAC1C,WAAM,GAAN,MAAM,CAAQ;QARxB,YAAO,GAAY,KAAK,CAAC;QAEzB,UAAK,GAAQ,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;QAG/C,oBAAe,GAAY,KAAK,CAAC;IAI9B,CAAC;IAEJ,OAAO;QACL,IAAI,CAAC,YAAY,GAAG,gFAAW,EAAE,CAAC;QAClC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,6BAA6B;QAC7B,mBAAmB;QACnB,6BAA6B;QAC7B,qBAAqB;QACrB,+BAA+B;QAC/B,OAAO;QACP,MAAM;QACN,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;YACvB,KAAK,EAAE,UAAU;YACjB,IAAI,EAAE,aAAa;YACnB,OAAO,EAAE,GAAG,EAAE;gBACZ,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;YAC9B,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC/C,CAAC;IAED,iBAAiB,CAAC,IAAI;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,SAAS,CAC1D,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CACrC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,kDAAI,CAAC,IAAI,CAAC;YACR,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,KAAK,CAAC,YAAY;SACzB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACX,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB,CAAC,MAAM;QACzB,QAAQ,IAAI,CAAC,SAAS,EAAE;YACtB,KAAK,MAAM;gBACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxD,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBACvB,MAAM;YACR;gBACE,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;SACnB;IACH,CAAC;IAED,SAAS,CAAC,MAAM;QACd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,aAAa,CAAC,MAAM;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,oBAAoB,CAAC,MAAM,EAAE,IAAI;QAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;QAE7C,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,kBAAkB,MAAM,IAAI,MAAM,CAAC,IAAI,SAAS;YACtD,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,QAAQ,MAAM,MAAM;SACxC,CAAC,CAAC,IAAI,CAAC,CAAO,MAAM,EAAE,EAAE,CAAC;YACxB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBAErB,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,SAAS,CACxD,CAAC,GAAG,EAAE,EAAE;oBACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBAC7C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC,EACD,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CACrC,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;QACH,CAAC,EAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;;kGAnHU,yBAAyB;yGAAzB,yBAAyB;QCXtC,+HAyHU;QAEV,iNAIc;;;QA/HJ,8EAAgB;;6FDWb,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACqD;;;AAE5G,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,oHAAyB,EAAE,CAAC,CAAC;AAMrE,MAAM,6BAA6B;;4GAA7B,6BAA6B;oLAA7B,6BAA6B,kBAH/B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,6BAA6B,uFAF9B,4DAAY;6FAEX,6BAA6B;cAJzC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB","file":"view-custom-fields-view-custom-fields-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ViewCustomFieldsRoutingModule } from './view-custom-fields-routing.module';\nimport { ViewCustomFieldsComponent } from '../../component/view-custom-fields/view-custom-fields.component';\nimport { SharedUtilitiesModule } from 'src/app/SharedModule/shared-utilities/shared-utilities.module';\nimport { PrimengModule } from 'src/app/SharedModule/primeng/primeng.module';\n\n@NgModule({\n  declarations: [ViewCustomFieldsComponent],\n  imports: [\n    CommonModule,\n    ViewCustomFieldsRoutingModule,\n    SharedUtilitiesModule,\n    PrimengModule,\n  ],\n})\nexport class ViewCustomFieldsModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CustomFieldsService } from 'src/app/service/custom-fields.service';\nimport { ACTIVE_USER } from 'src/app/utilities/Decode_jwt';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-view-custom-fields',\n  templateUrl: './view-custom-fields.component.html',\n  styleUrls: ['./view-custom-fields.component.scss'],\n})\nexport class ViewCustomFieldsComponent implements OnInit {\n  spinner: boolean = false;\n  custom_fields: any;\n  items: any = [{ label: 'Actions', items: [] }];\n  user_profile: any;\n  menu_type: string;\n  disbaled_fields: boolean = false;\n  constructor(\n    private custom_fields_service: CustomFieldsService,\n    private router: Router\n  ) {}\n\n  setMenu() {\n    this.user_profile = ACTIVE_USER();\n    this.get_custom_fields(false);\n    // this.items[0].items.push({\n    //   label: 'Edit',\n    //   icon: 'pi pi-user-edit',\n    //   command: () => {\n    //     this.menu_type = 'edit';\n    //   },\n    // });\n    this.items[0].items.push({\n      label: 'Disabled',\n      icon: 'pi pi-trash',\n      command: () => {\n        this.menu_type = 'disabled';\n      },\n    });\n  }\n\n  update_data() {\n    this.disbaled_fields = !this.disbaled_fields;\n    this.get_custom_fields(this.disbaled_fields);\n  }\n\n  get_custom_fields(type) {\n    this.spinner = true;\n    this.custom_fields_service.get_custom_fields(type).subscribe(\n      (res: any) => {\n        this.custom_fields = res.data;\n        console.log(this.custom_fields);\n        this.spinner = false;\n      },\n      (error) => this.error_handler(error)\n    );\n  }\n\n  error_handler(error) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: error.errorMessage,\n    }).then(() => {\n      this.spinner = false;\n      this.router.navigate(['/main']);\n    });\n  }\n\n  update_custom_fields(fields) {\n    switch (this.menu_type) {\n      case 'edit':\n        this.router.navigate(['/main/edit-course', fields._id]);\n        break;\n      case 'disabled':\n        this.disabled_(fields);\n        break;\n      default:\n        console.log('');\n    }\n  }\n\n  disabled_(fields) {\n    this.spinner = true;\n    this.update_fields_helper(fields, true);\n  }\n\n  enable_fields(fields) {\n    this.spinner = true;\n    this.update_fields_helper(fields, false);\n  }\n\n  update_fields_helper(fields, type) {\n    const string = type ? 'Disabled' : 'Enabled';\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: `Do you want to ${string} ${fields.name} fields`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: `Yes, ${string} it!`,\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        fields['disabled'] = type;\n        console.log(fields);\n        this.spinner = false;\n\n        this.custom_fields_service.update_status(fields).subscribe(\n          (res) => {\n            console.log(res);\n            this.get_custom_fields(this.disbaled_fields);\n            this.spinner = false;\n          },\n          (error) => this.error_handler(error)\n        );\n      } else {\n        this.spinner = false;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.setMenu();\n  }\n}\n","<section *ngIf=\"!spinner; else showspinner\">\n  <!-- Enabled Course -->\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"header\">\n        <h3 class=\"\">\n          <ng-container *ngIf=\"!disbaled_fields; else dis\">\n            Active Custom Fields\n          </ng-container>\n          <ng-template #dis> Disabled Custom Fields </ng-template>\n        </h3>\n\n        <div class=\"d-flex align-items-center\">\n          <button class=\"btn btn-outline-dark mr-3\">\n            <a href=\"javascript:void(0)\" (click)=\"update_data()\">\n              <ng-container *ngIf=\"!disbaled_fields; else enable\">\n                Disabled Fields\n              </ng-container>\n              <ng-template #enable> Active Fields </ng-template>\n            </a>\n          </button>\n\n          <button class=\"btn btn-primary\">\n            <a [routerLink]=\"['../custom-fields']\">\n              Create Custom Fields <i class=\"fas fa-plus\"></i>\n            </a>\n          </button>\n        </div>\n      </div>\n\n      <div>\n        <p-table\n          #customfields\n          [value]=\"custom_fields\"\n          dataKey=\"id\"\n          [rows]=\"10\"\n          [showCurrentPageReport]=\"true\"\n          [rowsPerPageOptions]=\"[10, 25, 50]\"\n          styleClass=\"p-datatable-customers\"\n          [paginator]=\"true\"\n          currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n          [globalFilterFields]=\"['name']\"\n        >\n          <ng-template pTemplate=\"caption\" class=\"w-100\">\n            <div class=\"p-d-flex w-100\">\n              <span class=\"p-input-icon-left p-ml-auto w-100\">\n                <i class=\"pi pi-search\"></i>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    customfields.filterGlobal($event.target.value, 'contains')\n                  \"\n                  placeholder=\"Search keyword\"\n                  class=\"w-100\"\n                />\n              </span>\n            </div>\n          </ng-template>\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th>Name</th>\n              <th>Placeholder</th>\n              <th>Option</th>\n              <th>CreatedAt</th>\n              <th>Action</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-fields>\n            <tr>\n              <td>\n                {{ fields.name }}\n              </td>\n              <td>{{ fields.placeholder }}</td>\n              <td>\n                <ul class=\"option-list\">\n                  <li *ngFor=\"let item of fields.option\">{{ item }}</li>\n                </ul>\n              </td>\n              <td>{{ fields.createdAt | date: \"medium\" }}</td>\n              <td class=\"position-relative\">\n                <ng-container *ngIf=\"!disbaled_fields; else en\">\n                  <button\n                    pButton\n                    pRipple\n                    type=\"button\"\n                    icon=\"pi pi-ellipsis-h\"\n                    class=\"p-button-rounded p-button-text\"\n                    (click)=\"menu.toggle($event)\"\n                  ></button>\n\n                  <p-menu\n                    #menu\n                    [popup]=\"true\"\n                    [model]=\"items\"\n                    (click)=\"update_custom_fields(fields)\"\n                  ></p-menu>\n                </ng-container>\n\n                <ng-template #en>\n                  <button\n                    pButton\n                    pRipple\n                    type=\"button\"\n                    icon=\"pi pi-pencil\"\n                    class=\"p-button-rounded p-button-text\"\n                    (click)=\"enable_fields(fields)\"\n                  ></button>\n                </ng-template>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td colspan=\"5\">No User found.</td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #showspinner>\n  <div class=\"spinner\">\n    <app-spinner></app-spinner>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ViewCustomFieldsComponent } from '../../component/view-custom-fields/view-custom-fields.component';\n\nconst routes: Routes = [{ path: '', component: ViewCustomFieldsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ViewCustomFieldsRoutingModule {}\n"],"sourceRoot":"webpack:///"}