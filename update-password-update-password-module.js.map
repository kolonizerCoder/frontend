{"version":3,"sources":["./src/app/Module/update-password/update-password.module.ts","./src/app/component/update-password/update-password.component.ts","./src/app/component/update-password/update-password.component.html","./src/app/CustomValidation/ConfirmPassword.ts","./src/app/Module/update-password/update-password-routing.module.ts"],"names":[],"mappings":"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","file":"update-password-update-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UpdateProfileRoutingModule } from './update-password-routing.module';\nimport { UpdatePasswordComponent } from 'src/app/component/update-password/update-password.component';\nimport { SharedUtilitiesModule } from 'src/app/SharedModule/shared-utilities/shared-utilities.module';\nimport { PrimengModule } from 'src/app/SharedModule/primeng/primeng.module';\n\n@NgModule({\n  declarations: [UpdatePasswordComponent],\n  imports: [\n    CommonModule,\n    UpdateProfileRoutingModule,\n    SharedUtilitiesModule,\n    PrimengModule,\n  ],\n})\nexport class UpdateProfileModule {}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { confirmPassword } from 'src/app/CustomValidation/ConfirmPassword';\nimport { UserService } from 'src/app/service/user.service';\nimport { eye_button } from 'src/app/utilities/password_eye';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-password',\n  templateUrl: './update-password.component.html',\n  styleUrls: ['./update-password.component.scss'],\n})\nexport class UpdatePasswordComponent implements OnInit {\n  update_password_form: FormGroup;\n  spinner: boolean = false;\n\n  @ViewChild('password') password: ElementRef;\n\n  constructor(\n    private fb: FormBuilder,\n    private user_service: UserService,\n    private router: Router\n  ) {}\n\n  validation() {\n    this.update_password_form = this.fb.group(\n      {\n        old_password: ['', [Validators.required]],\n        new_password: ['', [Validators.required]],\n        confirm_password: ['', Validators.required],\n      },\n      {\n        validators: confirmPassword.bind(this.update_password_form),\n      }\n    );\n  }\n\n  show_password() {\n    eye_button(this.password);\n  }\n\n  update_password() {\n    this.spinner = true;\n    const data = this.update_password_form.getRawValue();\n    this.user_service.update_password(data).subscribe(\n      (res) => {\n        Swal.fire({\n          icon: 'success',\n          title: 'Yeah...',\n          text: 'Password Update',\n        }).then(() => {\n          this.spinner = false;\n          this.update_password_form.reset();\n        });\n      },\n      (error) => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: error.errorMessage,\n        }).then(() => {\n          this.spinner = false;\n        });\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.validation();\n  }\n}\n","<div class=\"col\" *ngIf=\"!spinner; else showspinner\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Update Your Password</h5>\n\n      <form [formGroup]=\"update_password_form\" (ngSubmit)=\"update_password()\">\n        <div class=\"mb-3\">\n          <label for=\"exampleInputEmail1\" class=\"form-label\"\n            >Old Password</label\n          >\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            formControlName=\"old_password\"\n          />\n        </div>\n        <div class=\"mb-3 position-relative\">\n          <label for=\"exampleInputPassword1\" class=\"form-label\"\n            >New Password</label\n          >\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"exampleInputPassword1\"\n            formControlName=\"new_password\"\n            #password\n          />\n          <span class=\"eye\" (click)=\"show_password(password)\"\n            ><i\n              class=\"pi pi-eye-slash\"\n              *ngIf=\"password.getAttribute('type') === 'password'; else close\"\n            >\n            </i>\n\n            <ng-template #close>\n              <i class=\"pi pi-eye\"> </i>\n            </ng-template>\n          </span>\n        </div>\n\n        <div class=\"mb-3\">\n          <label for=\"exampleInputPassword1\" class=\"form-label\"\n            >Confirm Password</label\n          >\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"exampleInputPassword1\"\n            formControlName=\"confirm_password\"\n          />\n        </div>\n\n        <div\n          *ngIf=\"\n            update_password_form.controls.confirm_password.invalid &&\n            update_password_form.controls.confirm_password.dirty\n          \"\n          class=\"alert alert-danger mt-2\"\n        >\n          <div\n            *ngIf=\"\n              update_password_form.controls.confirm_password.errors.required\n            \"\n          >\n            Confirm Password is required\n          </div>\n\n          <div\n            *ngIf=\"\n              update_password_form.controls.confirm_password.errors\n                .passwordNotMatch\n            \"\n          >\n            Password not Match\n          </div>\n        </div>\n\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          [disabled]=\"update_password_form.invalid\"\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n\n<ng-template #showspinner>\n  <div class=\"spinner\">\n    <app-spinner></app-spinner>\n  </div>\n</ng-template>\n","import { FormGroup } from '@angular/forms';\n\nexport const confirmPassword = (formGroup: FormGroup) => {\n  const { value: password } = formGroup.get('new_password');\n  const confirmPassword = formGroup.get('confirm_password');\n\n  return password === confirmPassword.value\n    ? null\n    : confirmPassword.setErrors({ passwordNotMatch: true });\n};\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UpdatePasswordComponent } from 'src/app/component/update-password/update-password.component';\n\nconst routes: Routes = [{ path: '', component: UpdatePasswordComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UpdateProfileRoutingModule {}\n"],"sourceRoot":"webpack:///"}